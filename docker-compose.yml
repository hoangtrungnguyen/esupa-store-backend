version: '2.2'
services:
  # PostgreSQL Database Service
  db:
    image: postgres:latest # Use the official PostgreSQL image
    container_name: esupa-postgres # Give it a meaningful name
    environment:
      POSTGRES_DB: esupa # <-- Change this
      POSTGRES_USER: postgres # <-- Change this
      POSTGRES_PASSWORD: 12@esupa # <-- Change this (use a strong password!)
    volumes:
      # Mount a named volume to persist data across container restarts/updates
      - db_data:/var/lib/postgresql/data
      # Optional: Mount initialization scripts if needed (e.g., for schema setup)
      # These scripts run on the first start of a new volume
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    # ports:
    #   # Optional: Map host port 5432 to container port 5432 (allows external connections, e.g., for tools)
    #   # Remove this line if only the backend container needs access
    #   - "5432:5432"
    healthcheck: # Recommended: Check if the DB is ready
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped # Restart if it fails or Docker restarts, unless manually stopped
networks:
  sync_debezium_network:
    driver: bridge

volumes:
  db_data: